<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
    
	<groupId>com.fns.xlator</groupId>
	<artifactId>xlator</artifactId>
	<version>0.5.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>xlator</name>
	<description>Translation service prototype that is backed by a hosted Elasticache (Redis) instance</description>

    <organization>
        <name>FNS</name>
        <url>http://fastnsilver.github.io</url>
    </organization>
    
    <issueManagement>
        <url>https://github.com/fastnsilver/xlator/issues</url>
        <system>GitHub Issues</system>
    </issueManagement>
    
    <licenses>
        <license>
            <name>Apache</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>
    
    <scm>
        <url>https://github.com/fastnsilver/xlator</url>
        <connection>scm:git:git://github.com/fastnsilver/xlator.git</connection>
        <developerConnection>scm:git:git@github.com:fastnsilver/xlator.git</developerConnection>
    </scm>
    
    <developers>
        <developer>
            <email>fastnsilver@gmail.com</email>
            <name>Chris Phillipson</name>
            <url>https://github.com/fastnsilver</url>
            <id>fastnsilver</id>
        </developer>
    </developers>

    <distributionManagement>
        <!-- publish to GitHub gh-pages -->
        <site>
            <id>github</id>
            <name>Deployment through Maven's SCM Publish Plugin</name>
            <url>scm:git:git@github.com:fastnsilver/xlator.git</url>
        </site>
    </distributionManagement>
    

	<properties>
        <!-- General -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <logstash-logback-encoder.version>2.5</logstash-logback-encoder.version>
                
        <!-- Third-party library versions -->
        <commons-lang3.version>3.7</commons-lang3.version>
        <guava.version>30.0-jre</guava.version>
        <jackson.version>2.9.6</jackson.version>
        <jedis.version>2.8.1</jedis.version>
        <jsr305.version>3.0.1</jsr305.version>
        <micrometer.version>1.0.6</micrometer.version>
        <micrometer-jvm-extras.version>0.1.2</micrometer-jvm-extras.version>
        <slf4j.version>1.7.21</slf4j.version>
        <spring-auto-restdocs.version>2.0.1</spring-auto-restdocs.version>
        
        <!-- Maven -->
        <apiviz.version>1.3.2.GA</apiviz.version>
        <asciidoctor-maven-plugin.version>1.5.6</asciidoctor-maven-plugin.version>
        <docker-maven-plugin.version>0.26.0</docker-maven-plugin.version>
        <downloads-maven-plugin.version>0.6</downloads-maven-plugin.version>
        <doxia-module-markdown.version>1.6</doxia-module-markdown.version>
        <findbugs-maven-plugin.version>3.0.5</findbugs-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.1</jacoco-maven-plugin.version>
        <license-maven-plugin.version>1.16</license-maven-plugin.version>
        <lombok-maven-plugin.version>1.18.2</lombok-maven-plugin.version>
        <maven-changes-plugin.version>2.12.1</maven-changes-plugin.version>
        <maven-changelog-plugin.version>2.3</maven-changelog-plugin.version>
        <maven-checkstyle-plugin.version>3.0.0</maven-checkstyle-plugin.version>
        <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
        <maven-failsafe-plugin.version>2.22.0</maven-failsafe-plugin.version>
        <maven-javadoc-plugin.version>3.0.1</maven-javadoc-plugin.version>
        <maven-jxr-plugin.version>2.5</maven-jxr-plugin.version>
        <maven-plugin-plugin.version>3.5.2</maven-plugin-plugin.version>
        <maven-project-info-reports-plugin.version>2.7</maven-project-info-reports-plugin.version>
        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
        <maven-scm-provider-jgit.version>1.10.0</maven-scm-provider-jgit.version>
        <maven-site-plugin.version>3.4</maven-site-plugin.version>
        <maven-scm-publish-plugin.version>3.0.0</maven-scm-publish-plugin.version>
        <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
        <maven-surefire-report-plugin.version>2.22.0</maven-surefire-report-plugin.version>
        <plan-maven-plugin.version>1.2</plan-maven-plugin.version>
        <properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>
        <reflow-velocity-tools.version>1.1.1</reflow-velocity-tools.version>
        <sonar-maven-plugin.version>3.4.0.905</sonar-maven-plugin.version>
        <spring-banner-plugin.version>1.0</spring-banner-plugin.version>
        <taglist-maven-plugin.version>2.4</taglist-maven-plugin.version>
        <velocity.version>1.7</velocity.version>
        <versions-maven-plugin.version>2.5</versions-maven-plugin.version>
        <wagon-webdav-jackrabbit.version>3.1.0</wagon-webdav-jackrabbit.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Finchley.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
            
	<dependencies>
        <!-- Spring Boot -->
    	<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        
        <!-- Spring Cloud -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-aws</artifactId>
        </dependency>
        
        <!-- Third-party -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
        </dependency>        
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
  			<groupId>io.micrometer</groupId>
  			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
    		<groupId>io.github.mweirauch</groupId>
    		<artifactId>micrometer-jvm-extras</artifactId>
    		<version>${micrometer-jvm-extras.version}</version>
		</dependency>
		
		<!-- Test dependencies -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
		<dependency>
		    <groupId>org.springframework.restdocs</groupId>
		    <artifactId>spring-restdocs-mockmvc</artifactId>
		    <scope>test</scope>
		</dependency>
        <dependency>
		    <groupId>capital.scalable</groupId>
			<artifactId>spring-auto-restdocs-core</artifactId>
			<version>${spring-auto-restdocs.version}</version>
			<scope>test</scope> 
		</dependency>
    	</dependencies>
	
    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>http://repo.spring.io/libs-milestone-local</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-remote-releases</id>
            <name>Spring Remote Releases</name>
            <url>http://repo.spring.io/libs-release-remote</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>http://repo.spring.io/libs-milestone-local</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/application.yml</include>
                    <include>**/application.properties</include>
                    <include>**/banner.txt</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>**/application.yml</exclude>
                    <exclude>**/application.properties</exclude>
                    <exclude>**/banner.txt</exclude>
                </excludes>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <!--
                            Prepares the property pointing to the JaCoCo runtime agent which
                            is passed as VM argument when Maven the Surefire plugin is executed.
                        -->
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                                <!--
                                    Sets the name of the property containing the settings
                                    for JaCoCo runtime agent.
                                -->
                                <propertyName>surefireArgLine</propertyName>
                            </configuration>
                        </execution>
                        <!--
                            Ensures that the code coverage report for unit tests is created after
                            unit tests have been run.
                        -->
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                                <!-- Sets the output directory for the code coverage report. -->
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                            </configuration>
                        </execution>
    
                        <!-- The Executions required by unit tests are omitted. -->
                        <!--
                            Prepares the property pointing to the JaCoCo runtime agent which
                            is passed as VM argument when Maven the Failsafe plugin is executed.
                        -->
                        <execution>
                            <id>pre-integration-test</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                                <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                                <!--
                                    Sets the name of the property containing the settings
                                    for JaCoCo runtime agent.
                                -->
                                <propertyName>failsafeArgLine</propertyName>
                            </configuration>
                        </execution>
                        <!--
                            Ensures that the code coverage report for integration tests after
                            integration tests have been run.
                        -->
                        <execution>
                            <id>post-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                                <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                                <!-- Sets the output directory for the code coverage report. -->
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
        	<plugin>
                 <groupId>org.asciidoctor</groupId>
                 <artifactId>asciidoctor-maven-plugin</artifactId>
                 <version>${asciidoctor-maven-plugin.version}</version>
                 <executions>
                     <execution>
                         <id>generate-docs</id>
                         <phase>prepare-package</phase>
                         <goals>
                             <goal>process-asciidoc</goal>
                         </goals>
                         <configuration>
                             <backend>html</backend>
                             <attributes>
                                 <toclevels>2</toclevels>
                                 <toc>left</toc>
                                 <doctype>book</doctype>
                                 <generated>${project.build.directory}/docs/asciidoc/generated</generated>
                             </attributes>
                             <outputDirectory>${project.build.directory}/site</outputDirectory>
                         </configuration>
                     </execution>
                 </executions>
            </plugin>
            <plugin>
            	<artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-index-public</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/public</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/generated-docs</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-index-generated-docs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/generated-docs</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/generated-docs</directory>
                                    <includes>
                                        <include>index.html</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                	<failOnNoGitDirectory>false</failOnNoGitDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>validate-the-git-infos</id>
                        <goals>
                            <goal>validateRevision</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>tk.skuro</groupId>
                <artifactId>plan-maven-plugin</artifactId>
                <version>${plan-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <!-- Build test-jar artifact so that we can share test resources and implementation if required -->
            <!-- Also exclude the config override directory when packaging -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>config/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
	            <artifactId>maven-javadoc-plugin</artifactId>
	            <extensions>true</extensions>
	            <executions>
	                <execution>
	                    <id>generate-javadoc-json</id>
	                    <phase>compile</phase>
	                    <goals>
	                        <goal>javadoc-no-fork</goal>
	                    </goals>
	                    <configuration>
	                        <doclet>capital.scalable.restdocs.jsondoclet.ExtractDocumentationAsJsonDoclet</doclet>
	                        <docletArtifact>
	                            <groupId>capital.scalable</groupId>
	                            <artifactId>spring-auto-restdocs-json-doclet</artifactId>
	                            <version>${spring-auto-restdocs.version}</version>
	                        </docletArtifact>
	                        <destDir>generated-javadoc-json</destDir> 
	                        <reportOutputDirectory>${project.build.directory}</reportOutputDirectory> 
	                        <useStandardDocletOptions>false</useStandardDocletOptions>
	                        <show>package</show>
	                    </configuration>
	                </execution>
	            </executions>
	        </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- Sets the VM argument line used when unit tests are run. -->
                    <argLine>${surefireArgLine}</argLine>
                    <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!-- Excludes integration tests when unit tests are run. -->
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                    <systemPropertyVariables>
	                    <org.springframework.restdocs.outputDir>
	                        ${project.build.directory}/generated-snippets 
	                    </org.springframework.restdocs.outputDir>
	                    <org.springframework.restdocs.javadocJsonDir>
	                        ${project.build.directory}/generated-javadoc-json 
	                    </org.springframework.restdocs.javadocJsonDir>
	                </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <!-- Sets the VM argument line used when integration tests are run. -->
                    <argLine>${failsafeArgLine}</argLine>
                    <!--
                        Skips integration tests if the value of skip.integration.tests property
                        is true
                    -->
                    <skipTests>${skip.integration.tests}</skipTests>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${license-maven-plugin.version}</version>
                <configuration>
                    <inceptionYear>2016</inceptionYear>
                    <licenseName>apache_v2</licenseName>
                    <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
                    <canUpdateCopyright>true</canUpdateCopyright>
                    <canUpdateDescription>true</canUpdateDescription>
                    <canUpdateLicense>true</canUpdateLicense>
                    <roots>
                        <root>src/main/java</root>
                        <root>src/test/java</root>
                    </roots>
                </configuration>
                <executions>
                    <execution>
                        <id>update-header</id>
                        <goals>
                            <goal>update-file-header</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
            </plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
        </plugins>
    </build>
    
    <profiles>
        <profile>
            <id>documentation</id>
            <repositories>
                <repository>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                    <id>central</id>
                    <name>bintray</name>
                    <url>http://jcenter.bintray.com</url>
                </repository>
            </repositories>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-site-plugin</artifactId>
                            <version>${maven-site-plugin.version}</version>
                            <configuration>
                                <locales>en</locales>
                                <port>9000</port>
                                <skipDeploy>true</skipDeploy>
                                <tempWebappDirectory>${basedir}/target/site/tempdir</tempWebappDirectory>
                                <relativizeDecorationLinks>false</relativizeDecorationLinks>
                            </configuration>
                            <dependencies>
                                <dependency>
                                    <!--
                                    | allows markdown syntax for site generation. To use it place files below
                                    | src/site/markdown/[filename].md
                                    -->
                                    <groupId>org.apache.maven.doxia</groupId>
                                    <artifactId>doxia-module-markdown</artifactId>
                                    <version>${doxia-module-markdown.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>org.apache.maven.wagon</groupId>
                                    <artifactId>wagon-webdav-jackrabbit</artifactId>
                                    <version>${wagon-webdav-jackrabbit.version}</version>
                                </dependency>
                                <dependency>
                                    <groupId>lt.velykis.maven.skins</groupId>
                                    <artifactId>reflow-velocity-tools</artifactId>
                                    <version>${reflow-velocity-tools.version}</version>
                                </dependency>
                                <!-- Reflow skin requires Velocity >= 1.7  -->
                                <dependency>
                                    <groupId>org.apache.velocity</groupId>
                                    <artifactId>velocity</artifactId>
                                    <version>${velocity.version}</version>
                                </dependency>
                            </dependencies>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>stage-for-scm-publish</id>
                                <phase>post-site</phase>
                                <goals>
                                    <goal>stage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-scm-publish-plugin</artifactId>
                        <version>${maven-scm-publish-plugin.version}</version>
                        <configuration>
                            <scmBranch>gh-pages</scmBranch>
                        </configuration>
                        <executions>
                            <execution>
                                <id>scm-publish</id>
                                <phase>site-deploy</phase>
                                <goals>
                                    <goal>publish-scm</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-changelog-plugin</artifactId>
                        <version>${maven-changelog-plugin.version}</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.apache.maven.scm</groupId>
                                <artifactId>maven-scm-provider-jgit</artifactId>
                                <version>${maven-scm-provider-jgit.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven-javadoc-plugin.version}</version>
                        <configuration>
                            <!-- Default configuration for all reports -->
                            <detectOfflineLinks>true</detectOfflineLinks>
                            <!-- <detectLinks>true</detectLinks> -->
                            <detectJavaApiLink>true</detectJavaApiLink>
                            <linksource>true</linksource>
                            <useStandardDocletOptions>true</useStandardDocletOptions>
                            <breakiterator>true</breakiterator>
                            <javadocVersion>${compileSource}</javadocVersion>
                            <version>true</version>
                            <author>true</author>
                            <keywords>true</keywords>
                            <minmemory>128m</minmemory>
                            <maxmemory>512m</maxmemory>
                            <doclet>org.jboss.apiviz.APIviz</doclet>
                            <docletArtifact>
                                <groupId>org.jboss.apiviz</groupId>
                                <artifactId>apiviz</artifactId>
                                <version>${apiviz.version}</version>
                            </docletArtifact>
                            <additionalparam>
                                -charset UTF-8
                                -docencoding UTF-8
                                -version
                                -author
                                -breakiterator
                                -linksource
                                -sourcetab 4
                                -windowtitle "${project.name} ${project.version} API Reference"
                                -doctitle "${project.name} ${project.version} API Reference"
                                -link https://docs.oracle.com/javase/8/docs/api/
                                -link http://jsr311.java.net/nonav/releases/1.1
                                -Xdoclint:none
                            </additionalparam>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <id>non-aggregate</id>
                                <configuration>
                                    <!-- Specific configuration for the non aggregate report -->
                                    <doclet>org.jboss.apiviz.APIviz</doclet>
                                    <docletArtifact>
                                        <groupId>org.jboss.apiviz</groupId>
                                        <artifactId>apiviz</artifactId>
                                        <version>${apiviz.version}</version>
                                    </docletArtifact>
                                    <additionalparam>
                                        -charset UTF-8
                                        -docencoding UTF-8
                                        -version
                                        -author
                                        -breakiterator
                                        -linksource
                                        -sourcetab 4
                                        -windowtitle "${project.name} ${project.version} API Reference"
                                        -doctitle "${project.name} ${project.version} API Reference"
                                        -link https://docs.oracle.com/javase/8/docs/api/
                                        -link http://jsr311.java.net/nonav/releases/1.1
                                        -sourceclasspath ${project.build.outputDirectory}
                                    </additionalparam>
                                </configuration>
                                <reports>
                                    <report>javadoc</report>
                                </reports>
                            </reportSet>
                            <reportSet>
                                <id>aggregate</id>
                                <configuration>
                                    <!-- Specific configuration for the aggregate report -->
                                    <doclet>org.jboss.apiviz.APIviz</doclet>
                                    <docletArtifact>
                                        <groupId>org.jboss.apiviz</groupId>
                                        <artifactId>apiviz</artifactId>
                                        <version>${apiviz.version}</version>
                                    </docletArtifact>
                                    <additionalparam>
                                        -charset UTF-8
                                        -docencoding UTF-8
                                        -version
                                        -author
                                        -breakiterator
                                        -linksource
                                        -sourcetab 4
                                        -windowtitle "${project.name} ${project.version} API Reference"
                                        -doctitle "${project.name} ${project.version} API Reference"
                                        -link https://docs.oracle.com/javase/8/docs/api/
                                        -link http://jsr311.java.net/nonav/releases/1.1
                                    </additionalparam>
                                </configuration>
                                <reports>
                                    <report>aggregate</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jxr-plugin</artifactId>
                        <version>${maven-jxr-plugin.version}</version>
                        <configuration>
                            <linkJavadoc>true</linkJavadoc>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                            <meminitial>128m</meminitial>
                            <maxmem>512m</maxmem>
                            <!-- Allows non-ascii characters in source code -->
                            <encoding>UTF-8</encoding>
                        </configuration>
                    </plugin>
        
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-plugin-plugin</artifactId>
                        <version>${maven-plugin-plugin.version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <version>${maven-project-info-reports-plugin.version}</version>
                        <configuration>
                            <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                            <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                        <version>${maven-surefire-report-plugin.version}</version>
                        <reportSets>
                            <reportSet>
                                <id>unit-tests</id>
                                <reports>
                                    <report>report-only</report>
                                </reports>
                                <configuration>
                                    <outputName>surefire-report</outputName>
                                    <reportsDirectories>
                                        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                                    </reportsDirectories>
                                </configuration>
                            </reportSet>
                            <reportSet>
                                <id>integration-tests</id>
                                <reports>
                                    <report>report-only</report>
                                </reports>
                                <configuration>
                                    <outputName>failsafe-report</outputName>
                                    <reportsDirectories>
                                        <reportsDirectory>${project.build.directory}/failsafe-reports</reportsDirectory>
                                    </reportsDirectories>
                                </configuration>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>taglist-maven-plugin</artifactId>
                        <version>${taglist-maven-plugin.version}</version>
                        <configuration>
                            <tagListOptions>
                                <tagClasses>
                                    <tagClass>
                                        <displayName>To Do</displayName>
                                        <tags>
                                            <tag>
                                                <matchString>TODO</matchString>
                                                <matchType>exact</matchType>
                                            </tag>
                                        </tags>
                                    </tagClass>
                                    <tagClass>
                                        <displayName>To Fix</displayName>
                                        <tags>
                                            <tag>
                                                <matchString>FIXME</matchString>
                                                <matchType>exact</matchType>
                                            </tag>
                                            <tag>
                                                <matchString>DEBT</matchString>
                                                <matchType>exact</matchType>
                                            </tag>
                                            <tag>
                                                <matchString>deprecated</matchString>
                                                <matchType>ignoreCase</matchType>
                                            </tag>
                                        </tags>
                                    </tagClass>
                                    <tagClass>
                                        <displayName>Optional</displayName>
                                        <tags>
                                            <tag>
                                                <matchString>XXX</matchString>
                                                <matchType>exact</matchType>
                                            </tag>
                                        </tags>
                                    </tagClass>
                                </tagClasses>
                            </tagListOptions>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-changes-plugin</artifactId>
                        <version>${maven-changes-plugin.version}</version>
                        <configuration>
                            <githubAPIScheme>https</githubAPIScheme>
                            <githubAPIPort>443</githubAPIPort>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>changes-report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-changelog-plugin</artifactId>
                        <version>${maven-changelog-plugin.version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-maven-plugin.version}</version>
                        <reportSets>
                            <reportSet>
                                <id>unit-tests</id>                        
                                <reports>
                                    <report>report</report>
                                </reports>
                                <configuration>
                                    <reportName>JaCoCo Unit</reportName>
                                    <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>                            
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                                </configuration>
                            </reportSet>
                            <reportSet>
                                <id>integration-tests</id>
                                <reports>
                                    <report>report</report>
                                </reports>
                                <configuration>
                                    <reportName>JaCoCo Integration</reportName>
                                    <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>                            
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                                </configuration>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                        <version>${versions-maven-plugin.version}</version>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>dependency-updates-report</report>
                                    <report>plugin-updates-report</report>
                                    <report>property-updates-report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        
        <profile>
            <id>with-dev-report</id>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${maven-checkstyle-plugin.version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                        <version>${findbugs-maven-plugin.version}</version>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
                
        <profile>
            <id>with-devtools</id>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-devtools</artifactId>
                </dependency>
            </dependencies>
        </profile>
        
        <profile>
            <id>dockerize</id>
            <activation>
                <file>
                    <exists>.dockerize</exists>
                </file>
            </activation>
            <build>
                <plugins>
        			<plugin>
	 					<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${docker-maven-plugin.version}</version>
						<configuration>
							<images>
								<image>
									<name>fastnsilver/%a:%l</name>
									<build>
										<dockerFileDir>${project.build.directory}/docker-ready</dockerFileDir>
										<tags>${project.version}</tags>
									</build>
								</image>
							</images>
							<skipMachine>true</skipMachine>
						</configuration>
						<executions>
   							<execution>
   								<id>destroy-latest-docker-image</id>
   								<phase>clean</phase>
   								<goals>
   									<goal>remove</goal>
   								</goals>
   								<configuration>
   									<removeAll>true</removeAll>
   								</configuration>
   							</execution>
   							<execution>
   								<id>build-new-docker-image</id>
   								<phase>install</phase>
   								<goals>
   									<goal>build</goal>
   								</goals>
   							</execution>
   						</executions>
					</plugin>
					<plugin>
					    <artifactId>maven-resources-plugin</artifactId>
					    <version>${maven-resources-plugin.version}</version>
					    <executions>
					        <execution>
					            <id>prepare-for-docker-build</id>
					            <phase>verify</phase>
					            <goals>
					                <goal>copy-resources</goal>
					            </goals>
					            <configuration>
					                <outputDirectory>${project.build.directory}/docker-ready</outputDirectory>
					                <resources>
					                    <resource>
					                        <directory>src/main/docker</directory>
					                        <filtering>true</filtering>
					                    </resource>
					                    <resource>
					                        <directory>${project.build.directory}</directory>
					                        <includes>
					                            <include>${project.artifactId}-${project.version}.jar</include>
					                        </includes>
					                    </resource>
					                </resources>
					            </configuration>
					        </execution>
					    </executions>
					</plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
